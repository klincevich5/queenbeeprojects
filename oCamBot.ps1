# –ü—É—Ç—å –∫ –ø—Ä–æ–≥—Ä–∞–º–º–µ oCam
$ocamPath = "C:\Program Files (x86)\oCam\oCam.exe"

# –ü–∞–ø–∫–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–∞–ø–∏—Å–µ–π (–∫—É–¥–∞ oCam –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç)
$defaultSaveFolder = "C:\Users\user\Documents\oCam"

# –ü—Ä–æ–≤–µ—Ä–∫–∞, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–∞–ø–∫–∞ –¥–ª—è –∑–∞–ø–∏—Å–µ–π
if (!(Test-Path -Path $defaultSaveFolder)) {
    New-Item -ItemType Directory -Path $defaultSaveFolder
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞, –∑–∞–ø—É—â–µ–Ω–∞ –ª–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∞ oCam
$ocamRunning = Get-Process -Name "oCam" -ErrorAction SilentlyContinue

if (-not $ocamRunning) {
    # –ï—Å–ª–∏ oCam –Ω–µ –∑–∞–ø—É—â–µ–Ω, –∑–∞–ø—É—Å–∫–∞–µ–º –µ—ë
    Start-Process -FilePath $ocamPath
    # –ñ–¥—ë–º, –ø–æ–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≥—Ä—É–∑–∏—Ç—Å—è
    Start-Sleep -Seconds 5
}

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞ —Å —Ñ–æ—Ä–º–∞—Ç–æ–º "Smile proof HH.mm dd.MM.yyyy"
$timestamp = (Get-Date).ToString("HH.mm dd.MM.yyyy")
$newFileName = "Smile proof $timestamp.mp4"
$destinationFilePath = Join-Path -Path $defaultSaveFolder -ChildPath $newFileName

# –ù–∞—á–∞–ª–æ –∑–∞–ø–∏—Å–∏ (F1 –¥–ª—è –Ω–∞—á–∞–ª–∞ –∑–∞–ø–∏—Å–∏)
Add-Type -AssemblyName System.Windows.Forms
[System.Windows.Forms.SendKeys]::SendWait("{F1}")

# –ó–∞–ø–∏—Å—å –≤ —Ç–µ—á–µ–Ω–∏–µ 10 —Å–µ–∫—É–Ω–¥
Start-Sleep -Seconds 10

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–ø–∏—Å–∏ (F1 –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–ø–∏—Å–∏)
[System.Windows.Forms.SendKeys]::SendWait("{F1}")

# –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ—è–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞
Start-Sleep -Seconds 5
$latestFile = Get-ChildItem -Path $defaultSaveFolder -Filter "*.mp4" | Sort-Object LastWriteTime -Descending | Select-Object -First 1

if ($latestFile) {
    # –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –≤ –Ω–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç
    Rename-Item -Path $latestFile.FullName -NewName $newFileName
    Write-Output "–§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω—ë–Ω –∫–∞–∫: $destinationFilePath"

    # –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π –≤ Telegram
    Start-Sleep -Seconds 5

    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –±–æ—Ç–∞ –∏ –≥—Ä—É–ø–ø
    $botToken = "8161154213:AAGAUAwQewPBNCT_dEQ52JdFQFMFIHHcFZE"
    $mainChatId = "-4622489328"  # –û—Å–Ω–æ–≤–Ω–æ–π —á–∞—Ç
    $backupChatId = "-1002456483885"  # –ó–∞–ø–∞—Å–Ω–æ–π —á–∞—Ç
    
    # URL –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤–∏–¥–µ–æ
    $url = "https://api.telegram.org/bot$botToken/sendVideo"
    $logUrl = "https://api.telegram.org/bot$botToken/sendMessage"

    # –ó–∞–≥—Ä—É–∑–∫–∞ —Å–±–æ—Ä–∫–∏ System.Net.Http
    Add-Type -Path "C:\Windows\Microsoft.NET\Framework64\v4.0.30319\System.Net.Http.dll"

    $statusMessages = @()

    # –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤–∏–¥–µ–æ
    function Send-Video($chatId) {
        $multipartContent = New-Object System.Net.Http.MultipartFormDataContent
        $multipartContent.Add((New-Object System.Net.Http.StringContent($chatId)), "chat_id")

        $fileStream = [System.IO.File]::OpenRead($destinationFilePath)
        $fileContent = New-Object System.Net.Http.StreamContent($fileStream)
        $fileContent.Headers.ContentType = [System.Net.Http.Headers.MediaTypeHeaderValue]::Parse("video/mp4")
        $multipartContent.Add($fileContent, "video", [System.IO.Path]::GetFileName($destinationFilePath))

        try {
            $httpClient = New-Object System.Net.Http.HttpClient
            $response = $httpClient.PostAsync($url, $multipartContent).Result
            $responseContent = $response.Content.ReadAsStringAsync().Result

            if ($response.IsSuccessStatusCode) {
                Write-Host "–í–∏–¥–µ–æ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —á–∞—Ç $chatId!"
                $statusMessages += "‚úÖ –ß–∞—Ç $chatId: –£—Å–ø–µ—à–Ω–æ"
            } else {
                Write-Host "–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤–∏–¥–µ–æ –≤ —á–∞—Ç $chatId. –ö–æ–¥ –æ—Ç–≤–µ—Ç–∞: $($response.StatusCode)"
                Write-Host "–û—Ç–≤–µ—Ç: $responseContent"
                $statusMessages += "‚ùå –ß–∞—Ç $chatId: –û—à–∏–±–∫–∞ ($($response.StatusCode))"
            }
        } catch {
            Write-Host "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ —á–∞—Ç $chatId: $_"
            $statusMessages += "‚ùå –ß–∞—Ç $chatId: –û—à–∏–±–∫–∞ ($_)."
        } finally {
            $fileStream.Dispose()
        }
    }

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —á–∞—Ç
    Send-Video $mainChatId
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ –≤ –∑–∞–ø–∞—Å–Ω–æ–π —á–∞—Ç
    Send-Video $backupChatId

    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –≤ –∑–∞–ø–∞—Å–Ω–æ–π —á–∞—Ç
    $statusMessage = "üì¢ **–û—Ç—á–µ—Ç –æ –∑–∞–≥—Ä—É–∑–∫–µ –≤–∏–¥–µ–æ**%0Aüé• **–§–∞–π–ª:** `$newFileName`%0Aüì§ **–°—Ç–∞—Ç—É—Å –æ—Ç–ø—Ä–∞–≤–∫–∏:**%0A" + ($statusMessages -join "%0A")
    $logParams = @{ "chat_id" = $backupChatId; "text" = $statusMessage; "parse_mode" = "Markdown" }
    Invoke-RestMethod -Uri $logUrl -Method Post -Body $logParams

} else {
    Write-Output "–û—à–∏–±–∫–∞: –§–∞–π–ª –∑–∞–ø–∏—Å–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω."
} 
exit
